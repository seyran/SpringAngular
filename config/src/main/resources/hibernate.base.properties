################### HIBERNATE Configuration ##########################

#hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringJtaSessionContext
#org.hibernate.context.JTASessionContext
hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

#hibernate.transaction.jta.platform=org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform
#hibernate.transaction.jta.platform=org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform


#had to also enable hibernate.jdbc.use_get_generated_keys otherwise Identity generation strategy was throwing an exception. Before it was enabled automatically based on metadata received from DB. So my whole solution was to add the following two lines to persistence.xml:
hibernate.jdbc.use_get_generated_keys=true
hibernate.id.new_generator_mappings=true
hibernate.bytecode.use_reflection_optimizer=true

hibernate.temp.use_jdbc_metadata_defaults=true
hibernate.jdbc.use_scrollable_resultset=true

hibernate.order_inserts=true
hibernate.order_updates=true


# 	A non-zero value enables use of JDBC2 batch updates by Hibernate.
hibernate.jdbc.batch_size=50

#A non-zero value determines the JDBC fetch size (callsStatement.setFetchSize()).
hibernate.jdbc.fetch_size=100



############### enable second level cache and query cache #############3

#hibernate.cache.default_cache_concurrency_strategy=read-only
javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
#spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
# ALL, ENABLE_SELECTIVE, DISABLE_SELECTIVE, NONE.


hibernate.cache.use_second_level_cache=true
#hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
#classpath:/ehcache.xml
net.sf.ehcache.configurationResourceName=/ehcache.xml

hibernate.cache.use_query_cache=true